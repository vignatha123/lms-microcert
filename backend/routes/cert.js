const express = require('express');
const router = express.Router();
const PDFDocument = require('pdfkit');
const auth = require('../middleware/auth');
const Result = require('../models/Result');
const User = require('../models/User');
const moment = require('moment');

// Generate PDF certificate for a result
router.get('/download/:resultId', auth, async (req, res) => {
    try {
        const { resultId } = req.params;
        const result = await Result.findById(resultId);
        if (!result) return res.status(404).json({ message: 'Result not found' });

        // only owner can download
        if (result.userId.toString() !== req.user._id.toString()) {
            return res.status(403).json({ message: 'Forbidden' });
        }

        const user = await User.findById(result.userId);
        const doc = new PDFDocument({ size: 'A4', layout: 'landscape' });

        // set response headers
        res.setHeader('Content-disposition', `attachment; filename = certificate_${resultId}.pdf`);
        res.setHeader('Content-type', 'application/pdf');

        // Pipe PDF to response
        doc.pipe(res);

        // Simple certificate design (clean)
        const pageWidth = doc.page.width;
        const pageHeight = doc.page.height;

        // Background rectangle
        doc.rect(0, 0, pageWidth, pageHeight).fill('#f8f9fb');

        doc.fillColor('#0b2f6b').fontSize(36).text('Certificate of Achievement', 0, 80, { align: 'center' });

        doc.moveDown(1);
        doc.fillColor('#333').fontSize(20).text(`Presented to`, 0, 160, { align: 'center' });

        // Name
        doc.fillColor('#111').fontSize(30).text(`${user.name}`, { align: 'center' });

        doc.moveDown(0.5);
        doc.fontSize(16).fillColor('#333').text(`For completing the quiz "${result.quizId}"`, { align: 'center' });

        doc.moveDown(0.6);
        doc.fontSize(18).text(`Score: ${result.score} / ${result.total} â€” ${result.passed ? 'Passed' : 'Failed'}`, { align: 'center' });

        doc.moveDown(2);
        doc.fontSize(12).fillColor('#555').text(`Date: ${moment(result.date).format('YYYY-MM-DD')}`, { align: 'center' });

        // footer
        doc.fontSize(10).fillColor('#444').text('LMS Micro-Certification Portal', 50, pageHeight - 60);
        doc.text('Generated by LMS Micro-Certification Portal', 50, pageHeight - 45);

        doc.end();
    } catch (err) {
        res.status(500).json({ message: 'Server error', error: err.message });
    }
});

module.exports = router;