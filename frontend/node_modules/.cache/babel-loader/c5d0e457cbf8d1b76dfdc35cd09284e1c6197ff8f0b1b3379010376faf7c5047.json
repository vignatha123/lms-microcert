{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\lms-microsoft\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.get(`/quiz/${quizId}`);\n        setQuestions(res.data.questions);\n        setAnswers(new Array(res.data.questions.length).fill(null));\n      } catch (err) {\n        setError(\"Unable to load questions. Make sure you are logged in.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, [quizId]);\n  const selectOption = optIndex => {\n    const copy = [...answers];\n    copy[index] = optIndex;\n    setAnswers(copy);\n  };\n  const next = () => index < questions.length - 1 && setIndex(index + 1);\n  const prev = () => index > 0 && setIndex(index - 1);\n  const submit = async () => {\n    try {\n      const res = await API.post(\"/result/submit\", {\n        quizId,\n        answers\n      });\n      navigate(`/result/${res.data.result.id}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Submit failed\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card small\",\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: \"No questions found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 35\n  }, this);\n  const q = questions[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Quiz: \", quizId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Q\", index + 1, \". \", q.questionText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: answers[index] === i,\n          onChange: () => selectOption(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" \", opt]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prev,\n        disabled: index === 0,\n        style: {\n          marginRight: 8\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), index < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small\",\n        style: {\n          marginTop: 8\n        },\n        children: [\"Question \", index + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"hNH9DRYEcZFDYJMuyAce0z40UEc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","API","jsxDEV","_jsxDEV","Quiz","_s","quizId","navigate","questions","setQuestions","answers","setAnswers","index","setIndex","loading","setLoading","error","setError","fetch","res","get","data","Array","length","fill","err","selectOption","optIndex","copy","next","prev","submit","post","result","id","_err$response","_err$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","q","questionText","options","map","opt","i","type","checked","onChange","marginTop","onClick","disabled","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/lms-microsoft/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport API from \"../api\";\r\n\r\nconst Quiz = () => {\r\n    const { quizId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [questions, setQuestions] = useState([]);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n                const res = await API.get(`/quiz/${quizId}`);\r\n                setQuestions(res.data.questions);\r\n                setAnswers(new Array(res.data.questions.length).fill(null));\r\n            } catch (err) {\r\n                setError(\"Unable to load questions. Make sure you are logged in.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetch();\r\n    }, [quizId]);\r\n\r\n    const selectOption = (optIndex) => {\r\n        const copy = [...answers];\r\n        copy[index] = optIndex;\r\n        setAnswers(copy);\r\n    };\r\n\r\n    const next = () => index < questions.length - 1 && setIndex(index + 1);\r\n    const prev = () => index > 0 && setIndex(index - 1);\r\n\r\n    const submit = async () => {\r\n        try {\r\n            const res = await API.post(\"/result/submit\", { quizId, answers });\r\n            navigate(`/result/${res.data.result.id}`);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Submit failed\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <div className=\"card\">Loading...</div>;\r\n    if (error) return <div className=\"card small\" style={{ color: \"red\" }}>{error}</div>;\r\n    if (!questions.length) return <div className=\"card\">No questions found.</div>;\r\n\r\n    const q = questions[index];\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>Quiz: {quizId}</h3>\r\n            <div className=\"question\">\r\n                <strong>\r\n                    Q{index + 1}. {q.questionText}\r\n                </strong>\r\n            </div>\r\n            <div>\r\n                {q.options.map((opt, i) => (\r\n                    <label key={i} className=\"option\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={answers[index] === i}\r\n                            onChange={() => selectOption(i)}\r\n                        />{\" \"}\r\n                        {opt}\r\n                    </label>\r\n                ))}\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12 }}>\r\n                <button onClick={prev} disabled={index === 0} style={{ marginRight: 8 }}>\r\n                    Prev\r\n                </button>\r\n                {index < questions.length - 1 ? (\r\n                    <button onClick={next}>Next</button>\r\n                ) : (\r\n                    <button onClick={submit}>Submit</button>\r\n                )}\r\n                <div className=\"small\" style={{ marginTop: 8 }}>\r\n                    Question {index + 1} of {questions.length}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}